apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: kabal-innstillinger
  namespace: klage
  labels:
    team: klage
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100M"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
spec:
  image: {{image}}
  observability:
    autoInstrumentation:
      enabled: true
      runtime: java
  gcp:
    sqlInstances:
      - name: kabal-innstillinger
        type: {{db_type}}
        maintenance:
          day: 1
          hour: 4
        tier: {{db_tier}}
        diskType: SSD
        highAvailability: {{db_ha}}
        diskSize: {{db_size}}
        diskAutoresize: true
        autoBackupHour: 2
        cascadingDelete: false
        databases:
          - name: kabal-innstillinger
  azure:
    application:
      enabled: true
      tenant: {{tenant}}
      claims:
        groups:
        {{#each adRoles}}
          - id: {{value}}
        {{/each}}
        extra:
          - NAVident
  kafka:
    pool: {{kafka_pool}}
  port: 7081
  startup:
    failureThreshold: 20
    initialDelay: 30
    path: /internal/health
    periodSeconds: 10
    timeout: 2
  liveness:
    path: /internal/health
    initialDelay: 20
    timeout: 1
    periodSeconds: 5
    failureThreshold: 10
  readiness:
    path: /internal/health
    initialDelay: 20
    timeout: 1
  resources:
    limits:
      memory: 5000Mi
    requests:
      cpu: 100m
      memory: 1024Mi
  ingresses:
  {{#each ingresses as |ingress|}}
    - {{ingress}}
  {{/each}}
  replicas:
    min: 2
    max: 2
    cpuThresholdPercentage: 80
  prometheus:
    enabled: true
    path: /internal/prometheus
  accessPolicy:
    inbound:
      rules:
        - application: kabal-frontend
        - application: kabal-api
        - application: kabal-search
        - application: kabin
        - application: kabin-api
        - application: kaptein
    outbound:
      rules:
        - application: logging
          namespace: nais-system
      external:
      {{#each externalHosts}}
        - host: {{host}}
        {{#if ports}}
          ports:
          {{#each ports}}
            - name: {{name}}
              port: {{port}}
              protocol: {{protocol}}
          {{/each}}
        {{/if}}
      {{/each}}
  envFrom:
    - secret: srvklage-saksbeh
    - secret: pdl-apikey
  env:
    - name: SPRING_PROFILES_ACTIVE
      value: {{springProfile}}
  {{#each envs}}
    - name: {{name}}
      value: {{value}}
  {{/each}}
  {{#each adRoles}}
    - name: {{name}}
      value: {{value}}
  {{/each}}
