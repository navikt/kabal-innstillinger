spring:
  application:
    name: kabal-innstillinger
  main:
    banner-mode: OFF
  sleuth:
    baggage:
      remote-fields:
        - Nav-Callid
        - Nav-Consumer-Id
      correlation-fields:
        - Nav-Callid
        - Nav-Consumer-Id
  web:
    resources:
      add-mappings: false
  mvc:
    throw-exception-if-no-handler-found: true
  datasource:
    platform: postgresql
    url: jdbc:postgresql://${NAIS_DATABASE_KABAL_INNSTILLINGER_KABAL_INNSTILLINGER_HOST}:${NAIS_DATABASE_KABAL_INNSTILLINGER_KABAL_INNSTILLINGER_PORT}/${NAIS_DATABASE_KABAL_INNSTILLINGER_KABAL_INNSTILLINGER_DATABASE}
    username: ${NAIS_DATABASE_KABAL_INNSTILLINGER_KABAL_INNSTILLINGER_USERNAME}
    password: ${NAIS_DATABASE_KABAL_INNSTILLINGER_KABAL_INNSTILLINGER_PASSWORD}
    driver-class-name: org.postgresql.Driver
  flyway:
    enabled: true
    clean-on-validation-error: false
    schemas: flyway_history_schema,innstillinger
  jpa:
    open-in-view: false
    properties:
      hibernate:
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 100
  lifecycle:
    timeout-per-shutdown-phase: 20s
  servlet:
    multipart:
      #       Size limitations are also handled by app itself to get nice fault messages, but this setting seems to fail faster?
      max-request-size: 8MB
      max-file-size: 8MB
  codec:
    max-in-memory-size: 16MB

maxAttachmentSize: 8MB

server:
  port: 7081
  error:
    whitelabel:
      enabled: false
  shutdown: graceful

management:
  health:
    elasticsearch:
      enabled: false
  endpoint:
    health:
      show-details: always
  endpoints.web:
    exposure:
      include: info, health, metrics, prometheus
    base-path: "/internal"
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

SERVICE_USER_USERNAME: srvklage-saksbeh

no.nav.security.jwt:
  issuer:
    aad:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}
  client:
    registration:
      azure-onbehalfof:
        token-endpoint-url: https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: https://graph.microsoft.com/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt
      pdl-onbehalfof:
        token-endpoint-url: https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${PDL_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt
      axsys-onbehalfof:
        token-endpoint-url: https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${AXSYS_CLUSTER}.${AXSYS_NAMESPACE}.${AXSYS_APP}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt
      axsys-maskintilmaskin:
        token-endpoint-url: https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${AXSYS_CLUSTER}.${AXSYS_NAMESPACE}.${AXSYS_APP}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt

navCallId: Nav-Callid
navConsumerId: Nav-Consumer-Id

MICROSOFT_GRAPH_URL: https://graph.microsoft.com/v1.0
UNLEASH_URL: https://unleash.nais.io/api/

SERVICE_USER_PASSWORD: itest

EGENANSATT_KAFKA_TOPIC: nom.skjermede-personer-v1